//{{ file_header }}
{% if plugin_list_interface_imports %}

{% for import in plugin_list_interface_imports %}
import {{ import }}
{% endfor %}
{% endif %}

/*
 This file contains the protocols and types of the plugin list interface requiring public ACL for use in another module.
 */

/// Declares the type of key used to identify plugins within the collection.
/// - NOTE: May be any ``Hashable`` type such as ``String`` or an enumeration.
internal typealias {{ plugin_list_name }}PluginListKeyType = String

/// Dynamic state from the caller provided to the plugins to use in determining whether they are enabled.
/// - NOTE: An alias to a tuple is supported.
internal typealias {{ plugin_list_name }}PluginListStateType = Void

{% if is_periphery_comment_enabled %}
// periphery:ignore
{% endif %}
/// @mockable
@MainActor
internal protocol {{ plugin_list_name }}PluginList {
    func createAll() -> [{{ plugin_list_name }}Builder]
    func create() -> {{ plugin_list_name }}Builder?
    func create(key: {{ plugin_list_name }}PluginListKeyType) -> {{ plugin_list_name }}Builder?
}
