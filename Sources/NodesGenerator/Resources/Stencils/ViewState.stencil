//{{ file_header }}
{% if view_state_imports %}

{% for import in view_state_imports %}
import {{ import }}
{% endfor %}
{% endif %}

/// The view state of the view.
{% if node_name == "Root" %}
internal struct {{ node_name }}ViewState: Equatable {

    internal let title: String
}
{% else %}
internal struct {{ node_name }}ViewState: Equatable {}
{% endif %}

/// The factory used to create view state from the state of the Node.
internal class {{ node_name }}ViewStateFactory: Nodes.Transform {

    /// The factory method in which state is transformed into view state.
    internal func callAsFunction(
        _ state: {{ node_name }}State
    ) -> {{ node_name }}ViewState {
        {% if node_name == "Root" %}
        {{ node_name }}ViewState(title: state.name)
        {% else %}
        {{ node_name }}ViewState()
        {% endif %}
    }
}
