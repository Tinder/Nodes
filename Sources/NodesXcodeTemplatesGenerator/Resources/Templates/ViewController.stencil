{{ file_header }}
{% if view_controller_imports %}

{% for import in view_controller_imports %}
import {{ import }}
{% endfor %}
{% endif %}

/**
 PURPOSE:
 The interface that the View will speak to the Context through. Used for informing the Context of
 view events and user interactions.
 */
{% if root_node %}
internal protocol {{ node_name }}Receiver: AnyObject {
    func viewDidAppear()
}
{% else %}
internal protocol {{ node_name }}Receiver: AnyObject {}
{% endif %}

/**
 PURPOSE:
 Concrete implementation of the UI.
 */
internal final class {{ node_name }}ViewController: {{ view_controller_type }}, StateObserver {
    {% if view_controller_properties %}

    {{ view_controller_properties|indent:4 }}
    {% endif %}

    {% if is_periphery_comment_enabled %}
    // periphery:ignore
    {% endif %}
    /// The view receiver.
    internal weak var receiver: {{ node_name }}Receiver?

    {{ view_controller_subscriptions_property|indent:4 }}

    /// The initial view state.
    private let initialState: {{ node_name }}ViewState

    /// {{ view_state_property_comment }}.
    private let {{ view_state_property_name }}: {{ publisher_type }}<{{ node_name }}ViewState{% if publisher_failure_type %}, {{ publisher_failure_type }}{% endif %}>

    /// The initializer.
    ///
    /// - Parameters:
    ///   - initialState: The initial view state.
    ///   - {{ view_state_property_name }}: {{ view_state_property_comment }}.
    internal init(
        initialState: {{ node_name }}ViewState,
        {{ view_state_property_name }}: {{ publisher_type }}<{{ node_name }}ViewState{% if publisher_failure_type %}, {{ publisher_failure_type }}{% endif %}>
    ) {
        self.initialState = initialState
        self.{{ view_state_property_name }} = {{ view_state_property_name }}
            {% if view_state_operators %}
            {{ view_state_operators|indent:12 }}
            {% endif %}
        super.init({{ view_controller_super_parameters }})
    }
    {% if view_controller_methods %}

    {{ view_controller_methods|indent:4 }}
    {% endif %}

    {% if view_controller_update_comment %}
    internal func update(with viewState: {{ node_name }}ViewState) {
        {{ view_controller_update_comment|indent:8 }}
    }
    {% else %}
    internal func update(with viewState: {{ node_name }}ViewState) {}
    {% endif %}
}

extension {{ node_name }}ViewController: {{ node_name }}ViewControllable {}
