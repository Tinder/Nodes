{{ file_header }}
{% if worker_imports %}

{% for import in worker_imports %}
import {{ import }}
{% endfor %}
{% endif %}

{% if is_periphery_comment_enabled %}
// periphery:ignore
{% endif %}
{% if is_documentation_enabled %}
/**
 PURPOSE:
 Encapsulates work to be performed by the Node.
 */
{% endif %}
internal protocol {{ worker_name }}Worker: Worker {}

{% if is_periphery_comment_enabled %}
// periphery:ignore
{% endif %}
{% if is_documentation_enabled %}
/**
 PURPOSE:
 Concrete implementation of the Worker.
 */
{% endif %}
internal final class {{ worker_name }}WorkerImp: AbstractWorker
<
    {{ cancellable_type }}
> {

    {% if is_documentation_enabled %}
    /// The initializer.
    {% endif %}
    override internal init() {}

    {% if is_documentation_enabled %}
    /// Implement logic to execute when the Worker is started.
    {% endif %}
    override internal func didStart() {}

    {% if is_documentation_enabled %}
    /// Implement logic to execute when the Worker has stopped.
    {% endif %}
    override internal func willStop() {}
}

extension {{ worker_name }}WorkerImp: {{ worker_name }}Worker {}
