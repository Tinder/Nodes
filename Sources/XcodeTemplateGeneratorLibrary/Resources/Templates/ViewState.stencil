{{ file_header }}
{% for import in view_state_imports %}
import {{ import }}{% endfor %}

/**
 PURPOSE:
 The view state of the view.
 */
internal struct {{ node_name }}ViewState: Equatable, InitialStateProviding {

    /// The initial state of the view.
    internal static let initialState: {{ node_name }}ViewState = {{ node_name }}ViewStateFactory().initialState
}

/**
 PURPOSE:
 The factory used to create view state from the state of the Node.
 */
internal class {{ node_name }}ViewStateFactory: Transform {

    /// The factory method in which state is transformed into view state.
    ///
    /// - Parameter state: the state
    /// - Returns: the view state
    internal func callAsFunction(_ state: {{ node_name }}State) -> {{ node_name }}ViewState {
        {{ node_name }}ViewState()
    }
}
