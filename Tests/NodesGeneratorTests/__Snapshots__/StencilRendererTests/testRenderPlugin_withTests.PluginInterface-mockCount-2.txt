//<fileHeader>

import <pluginInterfaceImport1>
import <pluginInterfaceImport2>

/*
 This file contains the protocols and types of the plugin interface requiring public ACL for use in another module.
 */

// periphery:ignore
/// @mockable
@MainActor
internal protocol Flow:  {}

// periphery:ignore
/// @mockable
@MainActor
internal protocol Listener: AnyObject {}

// periphery:ignore
/// @mockable
@MainActor
internal protocol Builder: AnyObject {
    func build(
        withListener listener: Listener
    ) -> Flow
}

/// Dynamic state from the caller provided to the plugin to use in determining whether it is enabled.
/// - NOTE: An alias to a tuple is supported.
internal typealias <pluginName>PluginStateType = Void

// periphery:ignore
/// @mockable
@MainActor
internal protocol <pluginName>Plugin {
    func create() -> <pluginName>Builder?
}
