▿ NodeXcodeTemplate
  - name: "Node - UIKit"
  ▿ permutations: 1 element
    ▿ NodeXcodeTemplatePermutation
      - name: "Node - UIKit - UIKit"
      ▿ stencilContext: NodeStencilContext
        ▿ analyticsImports: 1 element
          - "<baseImport>"
        ▿ analyticsProperties: 1 element
          ▿ 2 key/value pairs
            ▿ (2 elements)
              - key: "name"
              - value: "<analyticsPropertyName>"
            ▿ (2 elements)
              - key: "type"
              - value: "<analyticsPropertyType>"
        ▿ analyticsTestsImports: 1 element
          - "<baseTestImport>"
        ▿ builderImports: 5 elements
          - "<baseImport>"
          - "<builderImport>"
          - "<dependencyInjectionImport>"
          - "<reactiveImport>"
          - "Nodes"
        - componentDependencies: ""
        ▿ contextGenericTypes: 1 element
          - "<contextGenericType>"
        ▿ contextImports: 3 elements
          - "<baseImport>"
          - "<reactiveImport>"
          - "Nodes"
        ▿ contextTestsImports: 1 element
          - "<baseTestImport>"
        ▿ dependencies: 1 element
          ▿ 2 key/value pairs
            ▿ (2 elements)
              - key: "name"
              - value: "<dependencyName>"
            ▿ (2 elements)
              - key: "type"
              - value: "<dependencyType>"
        - fileHeader: "___FILEHEADER___"
        ▿ flowImports: 3 elements
          - "<baseImport>"
          - "<flowImport>"
          - "Nodes"
        ▿ flowProperties: 1 element
          ▿ 2 key/value pairs
            ▿ (2 elements)
              - key: "name"
              - value: "<flowPropertyName>"
            ▿ (2 elements)
              - key: "type"
              - value: "<flowPropertyType>"
        ▿ flowTestsImports: 1 element
          - "<baseTestImport>"
        - isNimbleEnabled: false
        - isPeripheryCommentEnabled: false
        - isPreviewProviderEnabled: false
        - nodeName: "___VARIABLE_productName___"
        - pluginImports: 0 elements
        - pluginListName: ""
        - pluginName: ""
        - pluginTestsImports: 0 elements
        - publisherFailureType: "<publisherFailureType>"
        - publisherType: "<publisherType>"
        ▿ stateImports: 1 element
          - "<baseImport>"
        - viewControllableFlowType: "<viewControllableFlowType>"
        - viewControllableMockContents: "<viewControllableMockContents>"
        - viewControllableType: "<viewControllableType>"
        ▿ viewControllerImports: 5 elements
          - "<baseImport>"
          - "<reactiveImport>"
          - "<viewControllerImport>"
          - "Nodes"
          - "UIKit"
        - viewControllerMethods: "@available(*, unavailable)\ninternal required init?(coder: NSCoder) {\n    preconditionFailure(\"init(coder:) has not been implemented\")\n}\n\noverride internal func viewDidLoad() {\n    super.viewDidLoad()\n    view.backgroundColor = .systemBackground\n    update(with: initialState)\n}\n\noverride internal func viewWillAppear(_ animated: Bool) {\n    super.viewWillAppear(animated)\n    observe(statePublisher).store(in: &cancellables)\n}\n\noverride internal func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n    cancellables.cancelAll()\n}"
        - viewControllerStaticContent: ""
        - viewControllerSubscriptionsProperty: "<viewControllerSubscriptionsProperty>"
        - viewControllerSuperParameters: "nibName: nil, bundle: nil"
        ▿ viewControllerTestsImports: 2 elements
          - "<baseTestImport>"
          - "<reactiveImport>"
        - viewControllerType: "UIViewController"
        - viewControllerUpdateComment: "<viewControllerUpdateComment>"
        - viewStateEmptyFactory: "<viewStateEmptyFactory>"
        ▿ viewStateFactoryTestsImports: 1 element
          - "<baseTestImport>"
        ▿ viewStateImports: 2 elements
          - "<baseImport>"
          - "Nodes"
        - viewStateOperators: "<viewStateOperators>"
        - viewStatePropertyComment: "<viewStatePropertyComment>"
        - viewStatePropertyName: "<viewStatePropertyName>"
        - viewStateTransform: "<viewStateTransform>"
        ▿ workerGenericTypes: 1 element
          - "<workerGenericType>"
      ▿ stencils: 7 elements
        - Analytics
        ▿ Builder
          - builder: Variation.default
        - Context
        - Flow
        - State
        ▿ ViewController
          - viewController: Variation.default
        - ViewState
  ▿ propertyList: XcodeTemplatePropertyList
    ▿ allowedTypes: 1 element
      - "public.swift-source"
    - kind: "Xcode.IDEFoundation.TextSubstitutionFileTemplateKind"
    - mainTemplateFile: "___FILEBASENAME___.swift"
    ▿ options: 1 element
      ▿ Option
        - default: Optional<String>.none
        - description: "The name of the Node"
        - identifier: "productName"
        - name: "Node name:"
        - notPersisted: true
        - required: true
        - requiredOptions: 0 key/value pairs
        - type: "text"
        - values: 0 elements
    - platforms: 0 elements
    - sortOrder: 3
    - supportsSwiftPackage: true
