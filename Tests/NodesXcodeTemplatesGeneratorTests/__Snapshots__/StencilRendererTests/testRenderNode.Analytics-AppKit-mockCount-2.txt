<fileHeader>

import <analyticsImport1>
import <analyticsImport2>

/*
 INSTRUCTIONS:

 Inject an existing analytics tracker (or client), that is defined outside of the Node, into the
 class defined in this file (below).

 Inject the tracker (or client) via a protocol. The protocol for the injected tracker (or client)
 can either be an existing one defined outside of the Node or can be a new one added to this file.
 */

/**
 PURPOSE:
 The interface for analytics tracked by this Node.

 Add requirements to this protocol to provide analytics tracking methods for this Node.
 */
/// @mockable
internal protocol <nodeName>Analytics: AnyObject {}

/**
 PURPOSE:
 Custom analytics implementation for this Node.
 */
internal final class <nodeName>AnalyticsImp {

    private let <analyticsPropertyName1>: <analyticsPropertyType1>
    private let <analyticsPropertyName2>: <analyticsPropertyType2>

    /// The initializer.
    /// - Parameters:
    ///   - <analyticsPropertyName1>: The `<analyticsPropertyType1>` instance
    ///   - <analyticsPropertyName2>: The `<analyticsPropertyType2>` instance
    init(
        <analyticsPropertyName1>: <analyticsPropertyType1>,
        <analyticsPropertyName2>: <analyticsPropertyType2>
    ) {
        self.<analyticsPropertyName1> = <analyticsPropertyName1>
        self.<analyticsPropertyName2> = <analyticsPropertyName2>
    }
}

extension <nodeName>AnalyticsImp: <nodeName>Analytics {}
