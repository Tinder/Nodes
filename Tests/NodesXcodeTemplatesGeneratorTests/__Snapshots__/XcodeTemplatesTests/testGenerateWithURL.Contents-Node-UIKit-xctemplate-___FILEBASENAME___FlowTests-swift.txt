//___FILEHEADER___

#warning("Manually move this test file to the corresponding test target.")

import XCTest

final class ___VARIABLE_productName___FlowTests: XCTestCase {

    private final class ___VARIABLE_productName___ViewControllableMock: UIViewController, ___VARIABLE_productName___ViewControllable {

            @available(*, unavailable)
    internal required init?(coder: NSCoder) {
        preconditionFailure("init(coder:) has not been implemented")
    }

    override internal func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = .systemBackground
        update(with: initialState)
    }

    override internal func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        observe(statePublisher).store(in: &cancellables)
    }

    override internal func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        cancellables.cancelAll()
    }
    }

    private var flow: ___VARIABLE_productName___FlowImp!
    private var contextMock: ___VARIABLE_productName___ContextInterfaceMock!
    private var viewControllableMock: ___VARIABLE_productName___ViewControllableMock!

    override func setUp() {
        super.setUp()
        contextMock = ___VARIABLE_productName___ContextInterfaceMock(isActive: true)
        viewControllableMock = ___VARIABLE_productName___ViewControllableMock()
        flow = ___VARIABLE_productName___FlowImp(
            context: contextMock,
            viewController: viewControllableMock
        )
    }

    override func tearDown() {
        contextMock = nil
        viewControllableMock = nil
        flow = nil
        super.tearDown()
    }

    func testNotNil() {
        XCTAssertNotNil(flow)
    }

    func testStart() {
        flow.start()
        XCTAssertTrue(flow.isStarted)
    }
}
