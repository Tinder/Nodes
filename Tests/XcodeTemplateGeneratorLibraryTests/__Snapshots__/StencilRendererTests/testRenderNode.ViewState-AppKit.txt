<fileHeader>

import <viewStateImports>

/**
 PURPOSE:
 The view state of the view.
 */
internal struct <nodeName>ViewState: Equatable, InitialStateProviding {

    /// The initial view state.
    internal static var initialState: <nodeName>ViewState = .init()
}

/**
 PURPOSE:
 The factory used to create view state from the state of the Node.
 */
internal class <nodeName>ViewStateFactory: Transform {

    /// The factory method in which state is transformed into view state.
    ///
    /// - Parameter state: The state.
    /// - Returns: The view state.
    internal func callAsFunction(_ state: <nodeName>State) -> <nodeName>ViewState {
        <nodeName>ViewState()
    }
}
