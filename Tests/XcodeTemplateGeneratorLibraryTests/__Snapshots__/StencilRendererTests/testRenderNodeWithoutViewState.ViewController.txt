<fileHeader>

import <viewControllerImports>

/**
 PURPOSE:
 The interface that the View will speak to the Context through. Used for informing the Context of
 view events and user interactions.
 */
internal protocol <nodeName>Receiver: AnyObject {
    func viewDidAppear()
}

/**
 PURPOSE:
 Concrete implementation of the UI.
 */
internal final class <nodeName>ViewController: <viewControllerType> {

    <viewControllerProperties>

    /// The view receiver.
    internal weak var receiver: <nodeName>Receiver?

    /// The Analytics instance.
    internal weak var analytics: <nodeName>Analytics?

    /// The initializer.
    internal init() {
        super.init(<viewControllerSuperParameters>)
    }

    @available(*, unavailable)
    internal required init?(coder: NSCoder) {
        preconditionFailure("init(coder:) has not been implemented")
    }

    <viewControllerMethods>
}

extension <nodeName>ViewController: <nodeName>ViewControllable {}
extension <nodeName>ViewController: <nodeName>Presentable {}
