<fileHeader>

import <viewControllerImports>

/**
 PURPOSE:
 The interface that the View will speak to the Context through. Used for informing the Context of
 view events and user interactions.
 */
internal protocol <nodeName>Receiver: AnyObject {
    func viewDidAppear()
}

/**
 PURPOSE:
 Host of the SwiftUI view.
 */
<viewControllerAvailabilityAttribute>
internal final class <nodeName>ViewController: AbstractViewHostingController<<nodeName>View> {

    <viewControllerProperties>


    <viewControllerMethods>
}

extension <nodeName>ViewController: <nodeName>ViewControllable {}
extension <nodeName>ViewController: <nodeName>Presentable {}

/**
 PURPOSE:
 Concrete implementation of the View.
 */
<viewControllerAvailabilityAttribute>
internal struct <nodeName>View: NodesView {

    /// The body of the view.
    internal var body: some View {
        Text("<nodeName>")
    }

    /// The view receiver.
    internal weak var receiver: <nodeName>Receiver?

    /// The Analytics instance.
    internal weak var analytics: <nodeName>Analytics?

    /// The initializer.
    internal init() {}
}

/**
 PURPOSE:
 The SwiftUI preview (excluded from release builds).
 */
<viewControllerAvailabilityAttribute>
internal struct <nodeName>View_Previews: PreviewProvider {

    internal static var previews: some View {
        <nodeName>View()
    }
}
