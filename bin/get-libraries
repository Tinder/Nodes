#!/usr/bin/env swift

import Foundation

let task: Process = .init()
let pipe: Pipe = .init()

task.standardOutput = pipe
task.launchPath = "/usr/bin/env"
task.arguments = ["swift", "package", "dump-package"]
task.launch()
task.waitUntilExit()

let data: Data = pipe.fileHandleForReading.readDataToEndOfFile()

guard let object: Any = try? JSONSerialization.jsonObject(with: data),
      let json: [String: Any] = object as? [String: Any],
      let products: [[String: Any]] = json["products"] as? [[String: Any]]
else { exit(EXIT_FAILURE) }

products
    .compactMap {
        guard let name: String = $0["name"] as? String,
              let type: [String: Any] = $0["type"] as? [String: Any],
              type["library"] != nil
        else { return nil}
        return name
    }
    .forEach { print($0) }
